//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SiniestrosSeguros.DAO
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using SiniestrosSeguros.DTO;

    public partial class SegurosDBEntities : DbContext
    {
        public SegurosDBEntities()
            : base("name=SegurosDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int SP_D_ArchivoValorDeclaradoPorId(Nullable<int> idArchivo, Nullable<short> idEstado)
        {
            var idArchivoParameter = idArchivo.HasValue ?
                new ObjectParameter("IdArchivo", idArchivo) :
                new ObjectParameter("IdArchivo", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_D_ArchivoValorDeclaradoPorId", idArchivoParameter, idEstadoParameter);
        }
    
        public virtual int SP_D_ValorDeclaradoDetalleDisgregado(Nullable<int> idValorDeclaradoDetalleDisgregado)
        {
            var idValorDeclaradoDetalleDisgregadoParameter = idValorDeclaradoDetalleDisgregado.HasValue ?
                new ObjectParameter("IdValorDeclaradoDetalleDisgregado", idValorDeclaradoDetalleDisgregado) :
                new ObjectParameter("IdValorDeclaradoDetalleDisgregado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_D_ValorDeclaradoDetalleDisgregado", idValorDeclaradoDetalleDisgregadoParameter);
        }
    
        public virtual int SP_D_ValorDeclaradoDetallePorId(Nullable<int> idValorDeclaradoDetalle, Nullable<short> idEstado)
        {
            var idValorDeclaradoDetalleParameter = idValorDeclaradoDetalle.HasValue ?
                new ObjectParameter("IdValorDeclaradoDetalle", idValorDeclaradoDetalle) :
                new ObjectParameter("IdValorDeclaradoDetalle", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_D_ValorDeclaradoDetallePorId", idValorDeclaradoDetalleParameter, idEstadoParameter);
        }
    
        public virtual int SP_I_ArchivoValorDeclarado(Nullable<int> idValorDeclarado, ObjectParameter idArchivo, string nombreOrigen, string nombreAsignado, string ruta, string formato, Nullable<short> idEstado)
        {
            var idValorDeclaradoParameter = idValorDeclarado.HasValue ?
                new ObjectParameter("IdValorDeclarado", idValorDeclarado) :
                new ObjectParameter("IdValorDeclarado", typeof(int));
    
            var nombreOrigenParameter = nombreOrigen != null ?
                new ObjectParameter("NombreOrigen", nombreOrigen) :
                new ObjectParameter("NombreOrigen", typeof(string));
    
            var nombreAsignadoParameter = nombreAsignado != null ?
                new ObjectParameter("NombreAsignado", nombreAsignado) :
                new ObjectParameter("NombreAsignado", typeof(string));
    
            var rutaParameter = ruta != null ?
                new ObjectParameter("Ruta", ruta) :
                new ObjectParameter("Ruta", typeof(string));
    
            var formatoParameter = formato != null ?
                new ObjectParameter("Formato", formato) :
                new ObjectParameter("Formato", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_I_ArchivoValorDeclarado", idValorDeclaradoParameter, idArchivo, nombreOrigenParameter, nombreAsignadoParameter, rutaParameter, formatoParameter, idEstadoParameter);
        }
    
        public virtual int SP_I_Constante(Nullable<short> idPadre, string constante, string descripcion, string codigoAgrupador, Nullable<short> orden, string tag, Nullable<bool> idEstado)
        {
            var idPadreParameter = idPadre.HasValue ?
                new ObjectParameter("IdPadre", idPadre) :
                new ObjectParameter("IdPadre", typeof(short));
    
            var constanteParameter = constante != null ?
                new ObjectParameter("Constante", constante) :
                new ObjectParameter("Constante", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var codigoAgrupadorParameter = codigoAgrupador != null ?
                new ObjectParameter("CodigoAgrupador", codigoAgrupador) :
                new ObjectParameter("CodigoAgrupador", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(short));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_I_Constante", idPadreParameter, constanteParameter, descripcionParameter, codigoAgrupadorParameter, ordenParameter, tagParameter, idEstadoParameter);
        }
    
        public virtual int SP_I_DivisionPoliza(Nullable<short> idTipoPoliza, string descripcion, string abreviatura, Nullable<bool> aplicaProveedor, Nullable<short> idEstado)
        {
            var idTipoPolizaParameter = idTipoPoliza.HasValue ?
                new ObjectParameter("IdTipoPoliza", idTipoPoliza) :
                new ObjectParameter("IdTipoPoliza", typeof(short));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var abreviaturaParameter = abreviatura != null ?
                new ObjectParameter("Abreviatura", abreviatura) :
                new ObjectParameter("Abreviatura", typeof(string));
    
            var aplicaProveedorParameter = aplicaProveedor.HasValue ?
                new ObjectParameter("AplicaProveedor", aplicaProveedor) :
                new ObjectParameter("AplicaProveedor", typeof(bool));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_I_DivisionPoliza", idTipoPolizaParameter, descripcionParameter, abreviaturaParameter, aplicaProveedorParameter, idEstadoParameter);
        }
    
        public virtual int SP_I_TipoValorDeclarado(ObjectParameter idTipoValorDeclarado, string nombre, string descripcion, Nullable<short> afectaImporte, Nullable<short> afectaCantidad, Nullable<short> permiteCargaDetalle, Nullable<short> idEstado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var afectaImporteParameter = afectaImporte.HasValue ?
                new ObjectParameter("AfectaImporte", afectaImporte) :
                new ObjectParameter("AfectaImporte", typeof(short));
    
            var afectaCantidadParameter = afectaCantidad.HasValue ?
                new ObjectParameter("AfectaCantidad", afectaCantidad) :
                new ObjectParameter("AfectaCantidad", typeof(short));
    
            var permiteCargaDetalleParameter = permiteCargaDetalle.HasValue ?
                new ObjectParameter("PermiteCargaDetalle", permiteCargaDetalle) :
                new ObjectParameter("PermiteCargaDetalle", typeof(short));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_I_TipoValorDeclarado", idTipoValorDeclarado, nombreParameter, descripcionParameter, afectaImporteParameter, afectaCantidadParameter, permiteCargaDetalleParameter, idEstadoParameter);
        }
    
        public virtual int SP_I_ValorDeclarado(ObjectParameter idValorDeclarado, Nullable<short> idEmpresa, Nullable<System.DateTime> fechaVigenciaInicio, Nullable<System.DateTime> fechaVigenciaTermino, Nullable<short> idMoneda, Nullable<decimal> tipoCambio)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(short));
    
            var fechaVigenciaInicioParameter = fechaVigenciaInicio.HasValue ?
                new ObjectParameter("FechaVigenciaInicio", fechaVigenciaInicio) :
                new ObjectParameter("FechaVigenciaInicio", typeof(System.DateTime));
    
            var fechaVigenciaTerminoParameter = fechaVigenciaTermino.HasValue ?
                new ObjectParameter("FechaVigenciaTermino", fechaVigenciaTermino) :
                new ObjectParameter("FechaVigenciaTermino", typeof(System.DateTime));
    
            var idMonedaParameter = idMoneda.HasValue ?
                new ObjectParameter("IdMoneda", idMoneda) :
                new ObjectParameter("IdMoneda", typeof(short));
    
            var tipoCambioParameter = tipoCambio.HasValue ?
                new ObjectParameter("TipoCambio", tipoCambio) :
                new ObjectParameter("TipoCambio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_I_ValorDeclarado", idValorDeclarado, idEmpresaParameter, fechaVigenciaInicioParameter, fechaVigenciaTerminoParameter, idMonedaParameter, tipoCambioParameter);
        }
    
        public virtual int SP_I_ValorDeclaradoDetalle(ObjectParameter idValorDeclaradoDetalle, Nullable<int> idValorDeclarado, Nullable<short> idTipoValorDeclarado, Nullable<short> idUnidadMedida, Nullable<decimal> cantidad, Nullable<decimal> importeValorDeclarado, Nullable<short> idMoneda, Nullable<short> idTipoRegistro)
        {
            var idValorDeclaradoParameter = idValorDeclarado.HasValue ?
                new ObjectParameter("IdValorDeclarado", idValorDeclarado) :
                new ObjectParameter("IdValorDeclarado", typeof(int));
    
            var idTipoValorDeclaradoParameter = idTipoValorDeclarado.HasValue ?
                new ObjectParameter("IdTipoValorDeclarado", idTipoValorDeclarado) :
                new ObjectParameter("IdTipoValorDeclarado", typeof(short));
    
            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(short));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var importeValorDeclaradoParameter = importeValorDeclarado.HasValue ?
                new ObjectParameter("ImporteValorDeclarado", importeValorDeclarado) :
                new ObjectParameter("ImporteValorDeclarado", typeof(decimal));
    
            var idMonedaParameter = idMoneda.HasValue ?
                new ObjectParameter("IdMoneda", idMoneda) :
                new ObjectParameter("IdMoneda", typeof(short));
    
            var idTipoRegistroParameter = idTipoRegistro.HasValue ?
                new ObjectParameter("IdTipoRegistro", idTipoRegistro) :
                new ObjectParameter("IdTipoRegistro", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_I_ValorDeclaradoDetalle", idValorDeclaradoDetalle, idValorDeclaradoParameter, idTipoValorDeclaradoParameter, idUnidadMedidaParameter, cantidadParameter, importeValorDeclaradoParameter, idMonedaParameter, idTipoRegistroParameter);
        }
    
        public virtual int SP_I_ValorDeclaradoDetalleComplemento(ObjectParameter idValorDeclaradoDetalleComplemento, Nullable<int> idValorDeclaradoDetalle, Nullable<short> idTipoBien, Nullable<int> idElementoElectrico, Nullable<int> idTrabajador, Nullable<int> idVehiculo, Nullable<int> idInstalacion, Nullable<short> idCentroCosto, Nullable<short> idArea, Nullable<short> idCargo, Nullable<short> idUUNN, Nullable<short> idTipoPlanilla, Nullable<short> idNivelRiesgo, Nullable<decimal> valorDeclarado, Nullable<decimal> importeMensual, Nullable<decimal> importeGratificacion, Nullable<short> idEstado, string nombreOrigen, string nombreAsignado, string ruta)
        {
            var idValorDeclaradoDetalleParameter = idValorDeclaradoDetalle.HasValue ?
                new ObjectParameter("IdValorDeclaradoDetalle", idValorDeclaradoDetalle) :
                new ObjectParameter("IdValorDeclaradoDetalle", typeof(int));
    
            var idTipoBienParameter = idTipoBien.HasValue ?
                new ObjectParameter("IdTipoBien", idTipoBien) :
                new ObjectParameter("IdTipoBien", typeof(short));
    
            var idElementoElectricoParameter = idElementoElectrico.HasValue ?
                new ObjectParameter("IdElementoElectrico", idElementoElectrico) :
                new ObjectParameter("IdElementoElectrico", typeof(int));
    
            var idTrabajadorParameter = idTrabajador.HasValue ?
                new ObjectParameter("IdTrabajador", idTrabajador) :
                new ObjectParameter("IdTrabajador", typeof(int));
    
            var idVehiculoParameter = idVehiculo.HasValue ?
                new ObjectParameter("IdVehiculo", idVehiculo) :
                new ObjectParameter("IdVehiculo", typeof(int));
    
            var idInstalacionParameter = idInstalacion.HasValue ?
                new ObjectParameter("IdInstalacion", idInstalacion) :
                new ObjectParameter("IdInstalacion", typeof(int));
    
            var idCentroCostoParameter = idCentroCosto.HasValue ?
                new ObjectParameter("IdCentroCosto", idCentroCosto) :
                new ObjectParameter("IdCentroCosto", typeof(short));
    
            var idAreaParameter = idArea.HasValue ?
                new ObjectParameter("IdArea", idArea) :
                new ObjectParameter("IdArea", typeof(short));
    
            var idCargoParameter = idCargo.HasValue ?
                new ObjectParameter("IdCargo", idCargo) :
                new ObjectParameter("IdCargo", typeof(short));
    
            var idUUNNParameter = idUUNN.HasValue ?
                new ObjectParameter("IdUUNN", idUUNN) :
                new ObjectParameter("IdUUNN", typeof(short));
    
            var idTipoPlanillaParameter = idTipoPlanilla.HasValue ?
                new ObjectParameter("IdTipoPlanilla", idTipoPlanilla) :
                new ObjectParameter("IdTipoPlanilla", typeof(short));
    
            var idNivelRiesgoParameter = idNivelRiesgo.HasValue ?
                new ObjectParameter("IdNivelRiesgo", idNivelRiesgo) :
                new ObjectParameter("IdNivelRiesgo", typeof(short));
    
            var valorDeclaradoParameter = valorDeclarado.HasValue ?
                new ObjectParameter("ValorDeclarado", valorDeclarado) :
                new ObjectParameter("ValorDeclarado", typeof(decimal));
    
            var importeMensualParameter = importeMensual.HasValue ?
                new ObjectParameter("ImporteMensual", importeMensual) :
                new ObjectParameter("ImporteMensual", typeof(decimal));
    
            var importeGratificacionParameter = importeGratificacion.HasValue ?
                new ObjectParameter("ImporteGratificacion", importeGratificacion) :
                new ObjectParameter("ImporteGratificacion", typeof(decimal));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            var nombreOrigenParameter = nombreOrigen != null ?
                new ObjectParameter("NombreOrigen", nombreOrigen) :
                new ObjectParameter("NombreOrigen", typeof(string));
    
            var nombreAsignadoParameter = nombreAsignado != null ?
                new ObjectParameter("NombreAsignado", nombreAsignado) :
                new ObjectParameter("NombreAsignado", typeof(string));
    
            var rutaParameter = ruta != null ?
                new ObjectParameter("Ruta", ruta) :
                new ObjectParameter("Ruta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_I_ValorDeclaradoDetalleComplemento", idValorDeclaradoDetalleComplemento, idValorDeclaradoDetalleParameter, idTipoBienParameter, idElementoElectricoParameter, idTrabajadorParameter, idVehiculoParameter, idInstalacionParameter, idCentroCostoParameter, idAreaParameter, idCargoParameter, idUUNNParameter, idTipoPlanillaParameter, idNivelRiesgoParameter, valorDeclaradoParameter, importeMensualParameter, importeGratificacionParameter, idEstadoParameter, nombreOrigenParameter, nombreAsignadoParameter, rutaParameter);
        }
    
        public virtual int SP_I_ValorDeclaradoDetalleDisgregado(Nullable<int> idValorDeclaradoDetalle, Nullable<short> idTipoPoliza, Nullable<short> idDivisionPoliza, Nullable<short> idUnidadMedida, Nullable<decimal> cantidad, Nullable<short> idMoneda, Nullable<decimal> importeValorDeclarado)
        {
            var idValorDeclaradoDetalleParameter = idValorDeclaradoDetalle.HasValue ?
                new ObjectParameter("IdValorDeclaradoDetalle", idValorDeclaradoDetalle) :
                new ObjectParameter("IdValorDeclaradoDetalle", typeof(int));
    
            var idTipoPolizaParameter = idTipoPoliza.HasValue ?
                new ObjectParameter("IdTipoPoliza", idTipoPoliza) :
                new ObjectParameter("IdTipoPoliza", typeof(short));
    
            var idDivisionPolizaParameter = idDivisionPoliza.HasValue ?
                new ObjectParameter("IdDivisionPoliza", idDivisionPoliza) :
                new ObjectParameter("IdDivisionPoliza", typeof(short));
    
            var idUnidadMedidaParameter = idUnidadMedida.HasValue ?
                new ObjectParameter("IdUnidadMedida", idUnidadMedida) :
                new ObjectParameter("IdUnidadMedida", typeof(short));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var idMonedaParameter = idMoneda.HasValue ?
                new ObjectParameter("IdMoneda", idMoneda) :
                new ObjectParameter("IdMoneda", typeof(short));
    
            var importeValorDeclaradoParameter = importeValorDeclarado.HasValue ?
                new ObjectParameter("ImporteValorDeclarado", importeValorDeclarado) :
                new ObjectParameter("ImporteValorDeclarado", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_I_ValorDeclaradoDetalleDisgregado", idValorDeclaradoDetalleParameter, idTipoPolizaParameter, idDivisionPolizaParameter, idUnidadMedidaParameter, cantidadParameter, idMonedaParameter, importeValorDeclaradoParameter);
        }
    
        public virtual ObjectResult<SP_S_ArchivoValorDeclarado_Result> SP_S_ArchivoValorDeclarado(Nullable<int> idValorDeclarado, Nullable<short> idEstado)
        {
            var idValorDeclaradoParameter = idValorDeclarado.HasValue ?
                new ObjectParameter("IdValorDeclarado", idValorDeclarado) :
                new ObjectParameter("IdValorDeclarado", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_ArchivoValorDeclarado_Result>("SP_S_ArchivoValorDeclarado", idValorDeclaradoParameter, idEstadoParameter);
        }
    
        public virtual ObjectResult<SP_S_Constante_Result> SP_S_Constante(Nullable<short> idConstante)
        {
            var idConstanteParameter = idConstante.HasValue ?
                new ObjectParameter("IdConstante", idConstante) :
                new ObjectParameter("IdConstante", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_Constante_Result>("SP_S_Constante", idConstanteParameter);
        }
    
        public virtual ObjectResult<SP_S_Constante_Hijo_Result> SP_S_Constante_Hijo(Nullable<short> idPadre, string constante)
        {
            var idPadreParameter = idPadre.HasValue ?
                new ObjectParameter("IdPadre", idPadre) :
                new ObjectParameter("IdPadre", typeof(short));
    
            var constanteParameter = constante != null ?
                new ObjectParameter("Constante", constante) :
                new ObjectParameter("Constante", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_Constante_Hijo_Result>("SP_S_Constante_Hijo", idPadreParameter, constanteParameter);
        }
    
        public virtual ObjectResult<SP_S_Constante_PorCodigoAgrupador_Result> SP_S_Constante_PorCodigoAgrupador(string codigoAgrupador)
        {
            var codigoAgrupadorParameter = codigoAgrupador != null ?
                new ObjectParameter("CodigoAgrupador", codigoAgrupador) :
                new ObjectParameter("CodigoAgrupador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_Constante_PorCodigoAgrupador_Result>("SP_S_Constante_PorCodigoAgrupador", codigoAgrupadorParameter);
        }
    
        public virtual ObjectResult<SP_S_ConstantePorEstado_Result> SP_S_ConstantePorEstado(Nullable<short> idEstado)
        {
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_ConstantePorEstado_Result>("SP_S_ConstantePorEstado", idEstadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_S_DevuelveValorDeclarado_PorTipoValorDeclarado(Nullable<short> idTipoValorDeclarado)
        {
            var idTipoValorDeclaradoParameter = idTipoValorDeclarado.HasValue ?
                new ObjectParameter("IdTipoValorDeclarado", idTipoValorDeclarado) :
                new ObjectParameter("IdTipoValorDeclarado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_S_DevuelveValorDeclarado_PorTipoValorDeclarado", idTipoValorDeclaradoParameter);
        }
    
        public virtual ObjectResult<SP_S_DivisionPoliza_PorTipoPoliza_Result> SP_S_DivisionPoliza_PorTipoPoliza(Nullable<short> idTipoPoliza)
        {
            var idTipoPolizaParameter = idTipoPoliza.HasValue ?
                new ObjectParameter("IdTipoPoliza", idTipoPoliza) :
                new ObjectParameter("IdTipoPoliza", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_DivisionPoliza_PorTipoPoliza_Result>("SP_S_DivisionPoliza_PorTipoPoliza", idTipoPolizaParameter);
        }
    
        public virtual ObjectResult<SP_S_Empresa_Result> SP_S_Empresa()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_Empresa_Result>("SP_S_Empresa");
        }
    
        public virtual ObjectResult<SP_S_Estado_Result> SP_S_Estado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_Estado_Result>("SP_S_Estado");
        }
    
        public virtual ObjectResult<SP_S_Marca_Result> SP_S_Marca(Nullable<short> idEstado)
        {
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_Marca_Result>("SP_S_Marca", idEstadoParameter);
        }
    
        public virtual ObjectResult<SP_S_Modelo_Result> SP_S_Modelo(Nullable<short> idEstado)
        {
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_Modelo_Result>("SP_S_Modelo", idEstadoParameter);
        }
    
        public virtual ObjectResult<SP_S_Moneda_Result> SP_S_Moneda()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_Moneda_Result>("SP_S_Moneda");
        }
    
        public virtual ObjectResult<SP_S_RamoPoliza_PorCodigoAgrupador_Result> SP_S_RamoPoliza_PorCodigoAgrupador(string codigoAgrupador)
        {
            var codigoAgrupadorParameter = codigoAgrupador != null ?
                new ObjectParameter("CodigoAgrupador", codigoAgrupador) :
                new ObjectParameter("CodigoAgrupador", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_RamoPoliza_PorCodigoAgrupador_Result>("SP_S_RamoPoliza_PorCodigoAgrupador", codigoAgrupadorParameter);
        }
    
        public virtual ObjectResult<SP_S_ReportePersonal_Result> SP_S_ReportePersonal(Nullable<short> idTipoPoliza, Nullable<short> idEmpresa, Nullable<System.DateTime> fechaVigenciaInicio, Nullable<System.DateTime> fechaVigenciaFin)
        {
            var idTipoPolizaParameter = idTipoPoliza.HasValue ?
                new ObjectParameter("IdTipoPoliza", idTipoPoliza) :
                new ObjectParameter("IdTipoPoliza", typeof(short));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(short));
    
            var fechaVigenciaInicioParameter = fechaVigenciaInicio.HasValue ?
                new ObjectParameter("FechaVigenciaInicio", fechaVigenciaInicio) :
                new ObjectParameter("FechaVigenciaInicio", typeof(System.DateTime));
    
            var fechaVigenciaFinParameter = fechaVigenciaFin.HasValue ?
                new ObjectParameter("FechaVigenciaFin", fechaVigenciaFin) :
                new ObjectParameter("FechaVigenciaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_ReportePersonal_Result>("SP_S_ReportePersonal", idTipoPolizaParameter, idEmpresaParameter, fechaVigenciaInicioParameter, fechaVigenciaFinParameter);
        }
    
        public virtual ObjectResult<SP_S_TipoValorDeclarado_Result> SP_S_TipoValorDeclarado()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_TipoValorDeclarado_Result>("SP_S_TipoValorDeclarado");
        }
    
        public virtual ObjectResult<SP_S_TipoValorDeclarado_PorIdEstado_Result> SP_S_TipoValorDeclarado_PorIdEstado(Nullable<int> idEstado)
        {
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_TipoValorDeclarado_PorIdEstado_Result>("SP_S_TipoValorDeclarado_PorIdEstado", idEstadoParameter);
        }
    
        public virtual ObjectResult<SP_S_TipoValorDeclarado_PorIdTipoValorDeclarado_Result> SP_S_TipoValorDeclarado_PorIdTipoValorDeclarado(Nullable<int> idTipoValorDeclarado)
        {
            var idTipoValorDeclaradoParameter = idTipoValorDeclarado.HasValue ?
                new ObjectParameter("IdTipoValorDeclarado", idTipoValorDeclarado) :
                new ObjectParameter("IdTipoValorDeclarado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_TipoValorDeclarado_PorIdTipoValorDeclarado_Result>("SP_S_TipoValorDeclarado_PorIdTipoValorDeclarado", idTipoValorDeclaradoParameter);
        }
    
        public virtual ObjectResult<SP_S_TipoValorDeclarado_PorValorDeclarado_Result> SP_S_TipoValorDeclarado_PorValorDeclarado(Nullable<int> idValorDeclarado)
        {
            var idValorDeclaradoParameter = idValorDeclarado.HasValue ?
                new ObjectParameter("IdValorDeclarado", idValorDeclarado) :
                new ObjectParameter("IdValorDeclarado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_TipoValorDeclarado_PorValorDeclarado_Result>("SP_S_TipoValorDeclarado_PorValorDeclarado", idValorDeclaradoParameter);
        }
    
        public virtual ObjectResult<SP_S_Unidad_Medida_Result> SP_S_Unidad_Medida()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_Unidad_Medida_Result>("SP_S_Unidad_Medida");
        }
    
        public virtual ObjectResult<SP_S_UnidadNegocio_Result> SP_S_UnidadNegocio(Nullable<short> idEstado)
        {
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_UnidadNegocio_Result>("SP_S_UnidadNegocio", idEstadoParameter);
        }
    
        public virtual ObjectResult<SP_S_ValorDeclarado_Result> SP_S_ValorDeclarado(Nullable<short> idEmpresa, Nullable<System.DateTime> fechaIni, Nullable<System.DateTime> fechaFin, Nullable<short> idEstado)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(short));
    
            var fechaIniParameter = fechaIni.HasValue ?
                new ObjectParameter("FechaIni", fechaIni) :
                new ObjectParameter("FechaIni", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_ValorDeclarado_Result>("SP_S_ValorDeclarado", idEmpresaParameter, fechaIniParameter, fechaFinParameter, idEstadoParameter);
        }
    
        public virtual ObjectResult<SP_S_ValorDeclaradoDetalle_Result> SP_S_ValorDeclaradoDetalle(Nullable<int> idValorDeclarado, Nullable<short> idEstado)
        {
            var idValorDeclaradoParameter = idValorDeclarado.HasValue ?
                new ObjectParameter("IdValorDeclarado", idValorDeclarado) :
                new ObjectParameter("IdValorDeclarado", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_ValorDeclaradoDetalle_Result>("SP_S_ValorDeclaradoDetalle", idValorDeclaradoParameter, idEstadoParameter);
        }
    
        public virtual ObjectResult<SP_S_ValorDeclaradoDetalle_PorIdValorDeclarado_Result> SP_S_ValorDeclaradoDetalle_PorIdValorDeclarado(Nullable<int> idValorDeclarado)
        {
            var idValorDeclaradoParameter = idValorDeclarado.HasValue ?
                new ObjectParameter("IdValorDeclarado", idValorDeclarado) :
                new ObjectParameter("IdValorDeclarado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_ValorDeclaradoDetalle_PorIdValorDeclarado_Result>("SP_S_ValorDeclaradoDetalle_PorIdValorDeclarado", idValorDeclaradoParameter);
        }
    
        public virtual ObjectResult<SP_S_ValorDeclaradoDetalle_PorTipoValorDeclarado_ValorDeclarado_Result> SP_S_ValorDeclaradoDetalle_PorTipoValorDeclarado_ValorDeclarado(Nullable<int> idValorDeclarado, Nullable<short> idTipoValorDeclarado)
        {
            var idValorDeclaradoParameter = idValorDeclarado.HasValue ?
                new ObjectParameter("IdValorDeclarado", idValorDeclarado) :
                new ObjectParameter("IdValorDeclarado", typeof(int));
    
            var idTipoValorDeclaradoParameter = idTipoValorDeclarado.HasValue ?
                new ObjectParameter("IdTipoValorDeclarado", idTipoValorDeclarado) :
                new ObjectParameter("IdTipoValorDeclarado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_ValorDeclaradoDetalle_PorTipoValorDeclarado_ValorDeclarado_Result>("SP_S_ValorDeclaradoDetalle_PorTipoValorDeclarado_ValorDeclarado", idValorDeclaradoParameter, idTipoValorDeclaradoParameter);
        }
    
        public virtual ObjectResult<SP_S_ValorDeclaradoDetalleDisgregado_PorIdValorDeclarado_Result> SP_S_ValorDeclaradoDetalleDisgregado_PorIdValorDeclarado(Nullable<int> idValorDeclarado)
        {
            var idValorDeclaradoParameter = idValorDeclarado.HasValue ?
                new ObjectParameter("IdValorDeclarado", idValorDeclarado) :
                new ObjectParameter("IdValorDeclarado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_ValorDeclaradoDetalleDisgregado_PorIdValorDeclarado_Result>("SP_S_ValorDeclaradoDetalleDisgregado_PorIdValorDeclarado", idValorDeclaradoParameter);
        }
    
        public virtual ObjectResult<SP_S_ValorDeclaradoDetalleDisgregado_PorIdValorDeclaradoDetalle_Result> SP_S_ValorDeclaradoDetalleDisgregado_PorIdValorDeclaradoDetalle(Nullable<int> idValorDeclaradoDetalle)
        {
            var idValorDeclaradoDetalleParameter = idValorDeclaradoDetalle.HasValue ?
                new ObjectParameter("IdValorDeclaradoDetalle", idValorDeclaradoDetalle) :
                new ObjectParameter("IdValorDeclaradoDetalle", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_ValorDeclaradoDetalleDisgregado_PorIdValorDeclaradoDetalle_Result>("SP_S_ValorDeclaradoDetalleDisgregado_PorIdValorDeclaradoDetalle", idValorDeclaradoDetalleParameter);
        }
    
        public virtual ObjectResult<SP_S_Vehiculo_Result> SP_S_Vehiculo(Nullable<short> idEstado)
        {
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_Vehiculo_Result>("SP_S_Vehiculo", idEstadoParameter);
        }
    
        public virtual int SP_U_AjustarValoresDeclarados(Nullable<int> idValorDeclaradoDetalleDisgregado, Nullable<decimal> cantidadAjustada, Nullable<decimal> importeAjustado)
        {
            var idValorDeclaradoDetalleDisgregadoParameter = idValorDeclaradoDetalleDisgregado.HasValue ?
                new ObjectParameter("IdValorDeclaradoDetalleDisgregado", idValorDeclaradoDetalleDisgregado) :
                new ObjectParameter("IdValorDeclaradoDetalleDisgregado", typeof(int));
    
            var cantidadAjustadaParameter = cantidadAjustada.HasValue ?
                new ObjectParameter("CantidadAjustada", cantidadAjustada) :
                new ObjectParameter("CantidadAjustada", typeof(decimal));
    
            var importeAjustadoParameter = importeAjustado.HasValue ?
                new ObjectParameter("ImporteAjustado", importeAjustado) :
                new ObjectParameter("ImporteAjustado", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_U_AjustarValoresDeclarados", idValorDeclaradoDetalleDisgregadoParameter, cantidadAjustadaParameter, importeAjustadoParameter);
        }
    
        public virtual int SP_U_Constante(Nullable<short> idConstante, string constante, string descripcion, Nullable<short> orden, string tag, Nullable<bool> idEstado)
        {
            var idConstanteParameter = idConstante.HasValue ?
                new ObjectParameter("IdConstante", idConstante) :
                new ObjectParameter("IdConstante", typeof(short));
    
            var constanteParameter = constante != null ?
                new ObjectParameter("Constante", constante) :
                new ObjectParameter("Constante", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var ordenParameter = orden.HasValue ?
                new ObjectParameter("Orden", orden) :
                new ObjectParameter("Orden", typeof(short));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_U_Constante", idConstanteParameter, constanteParameter, descripcionParameter, ordenParameter, tagParameter, idEstadoParameter);
        }
    
        public virtual int SP_U_TipoPoliza(Nullable<short> idDivisionPoliza, string descripcion, string abreviatura, Nullable<bool> aplicaProveedor, Nullable<short> idEstado)
        {
            var idDivisionPolizaParameter = idDivisionPoliza.HasValue ?
                new ObjectParameter("IdDivisionPoliza", idDivisionPoliza) :
                new ObjectParameter("IdDivisionPoliza", typeof(short));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var abreviaturaParameter = abreviatura != null ?
                new ObjectParameter("Abreviatura", abreviatura) :
                new ObjectParameter("Abreviatura", typeof(string));
    
            var aplicaProveedorParameter = aplicaProveedor.HasValue ?
                new ObjectParameter("AplicaProveedor", aplicaProveedor) :
                new ObjectParameter("AplicaProveedor", typeof(bool));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_U_TipoPoliza", idDivisionPolizaParameter, descripcionParameter, abreviaturaParameter, aplicaProveedorParameter, idEstadoParameter);
        }
    
        public virtual int SP_U_TipoValorDeclarado(Nullable<short> idTipoValorDeclarado, string nombre, string descripcion, Nullable<short> afectaImporte, Nullable<short> afectaCantidad, Nullable<short> permiteCargaDetalle, Nullable<short> idEstado)
        {
            var idTipoValorDeclaradoParameter = idTipoValorDeclarado.HasValue ?
                new ObjectParameter("IdTipoValorDeclarado", idTipoValorDeclarado) :
                new ObjectParameter("IdTipoValorDeclarado", typeof(short));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var afectaImporteParameter = afectaImporte.HasValue ?
                new ObjectParameter("AfectaImporte", afectaImporte) :
                new ObjectParameter("AfectaImporte", typeof(short));
    
            var afectaCantidadParameter = afectaCantidad.HasValue ?
                new ObjectParameter("AfectaCantidad", afectaCantidad) :
                new ObjectParameter("AfectaCantidad", typeof(short));
    
            var permiteCargaDetalleParameter = permiteCargaDetalle.HasValue ?
                new ObjectParameter("PermiteCargaDetalle", permiteCargaDetalle) :
                new ObjectParameter("PermiteCargaDetalle", typeof(short));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_U_TipoValorDeclarado", idTipoValorDeclaradoParameter, nombreParameter, descripcionParameter, afectaImporteParameter, afectaCantidadParameter, permiteCargaDetalleParameter, idEstadoParameter);
        }
    
        public virtual int SP_U_ValorDeclarado(Nullable<int> idValorDeclarado, Nullable<short> idEmpresa, Nullable<System.DateTime> fechaIni, Nullable<System.DateTime> fechaFin, Nullable<short> idMoneda, Nullable<decimal> tipoCambio)
        {
            var idValorDeclaradoParameter = idValorDeclarado.HasValue ?
                new ObjectParameter("IdValorDeclarado", idValorDeclarado) :
                new ObjectParameter("IdValorDeclarado", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(short));
    
            var fechaIniParameter = fechaIni.HasValue ?
                new ObjectParameter("FechaIni", fechaIni) :
                new ObjectParameter("FechaIni", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var idMonedaParameter = idMoneda.HasValue ?
                new ObjectParameter("IdMoneda", idMoneda) :
                new ObjectParameter("IdMoneda", typeof(short));
    
            var tipoCambioParameter = tipoCambio.HasValue ?
                new ObjectParameter("TipoCambio", tipoCambio) :
                new ObjectParameter("TipoCambio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_U_ValorDeclarado", idValorDeclaradoParameter, idEmpresaParameter, fechaIniParameter, fechaFinParameter, idMonedaParameter, tipoCambioParameter);
        }
    
        public virtual int SP_U_ValorDeclarado_CamposAjustados(Nullable<int> idValorDeclarado, Nullable<int> idValorDeclaradoDetalle, string afecta)
        {
            var idValorDeclaradoParameter = idValorDeclarado.HasValue ?
                new ObjectParameter("IdValorDeclarado", idValorDeclarado) :
                new ObjectParameter("IdValorDeclarado", typeof(int));
    
            var idValorDeclaradoDetalleParameter = idValorDeclaradoDetalle.HasValue ?
                new ObjectParameter("IdValorDeclaradoDetalle", idValorDeclaradoDetalle) :
                new ObjectParameter("IdValorDeclaradoDetalle", typeof(int));
    
            var afectaParameter = afecta != null ?
                new ObjectParameter("Afecta", afecta) :
                new ObjectParameter("Afecta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_U_ValorDeclarado_CamposAjustados", idValorDeclaradoParameter, idValorDeclaradoDetalleParameter, afectaParameter);
        }
    
        public virtual int SP_U_ValorDeclaradoDetalle(Nullable<int> idValorDeclaradoDetalle, Nullable<short> tipoValorDeclarado, Nullable<short> unidadMedida, Nullable<short> idMoneda, Nullable<decimal> cantidad, Nullable<decimal> importeValorDeclarado)
        {
            var idValorDeclaradoDetalleParameter = idValorDeclaradoDetalle.HasValue ?
                new ObjectParameter("IdValorDeclaradoDetalle", idValorDeclaradoDetalle) :
                new ObjectParameter("IdValorDeclaradoDetalle", typeof(int));
    
            var tipoValorDeclaradoParameter = tipoValorDeclarado.HasValue ?
                new ObjectParameter("TipoValorDeclarado", tipoValorDeclarado) :
                new ObjectParameter("TipoValorDeclarado", typeof(short));
    
            var unidadMedidaParameter = unidadMedida.HasValue ?
                new ObjectParameter("UnidadMedida", unidadMedida) :
                new ObjectParameter("UnidadMedida", typeof(short));
    
            var idMonedaParameter = idMoneda.HasValue ?
                new ObjectParameter("IdMoneda", idMoneda) :
                new ObjectParameter("IdMoneda", typeof(short));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(decimal));
    
            var importeValorDeclaradoParameter = importeValorDeclarado.HasValue ?
                new ObjectParameter("ImporteValorDeclarado", importeValorDeclarado) :
                new ObjectParameter("ImporteValorDeclarado", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_U_ValorDeclaradoDetalle", idValorDeclaradoDetalleParameter, tipoValorDeclaradoParameter, unidadMedidaParameter, idMonedaParameter, cantidadParameter, importeValorDeclaradoParameter);
        }
    
        public virtual int SP_U_ValorDeclaradoDetalleComplementoPorEstado(Nullable<int> idValorDeclaradoDetalle, Nullable<short> idEstado)
        {
            var idValorDeclaradoDetalleParameter = idValorDeclaradoDetalle.HasValue ?
                new ObjectParameter("IdValorDeclaradoDetalle", idValorDeclaradoDetalle) :
                new ObjectParameter("IdValorDeclaradoDetalle", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_U_ValorDeclaradoDetalleComplementoPorEstado", idValorDeclaradoDetalleParameter, idEstadoParameter);
        }
    
        public virtual int ValorDeclaradoAutorizacion_Insertar_pa(Nullable<int> p_IdValorDeclarado, Nullable<short> p_IdEmpresa, Nullable<short> p_IdProceso)
        {
            var p_IdValorDeclaradoParameter = p_IdValorDeclarado.HasValue ?
                new ObjectParameter("P_IdValorDeclarado", p_IdValorDeclarado) :
                new ObjectParameter("P_IdValorDeclarado", typeof(int));
    
            var p_IdEmpresaParameter = p_IdEmpresa.HasValue ?
                new ObjectParameter("P_IdEmpresa", p_IdEmpresa) :
                new ObjectParameter("P_IdEmpresa", typeof(short));
    
            var p_IdProcesoParameter = p_IdProceso.HasValue ?
                new ObjectParameter("P_IdProceso", p_IdProceso) :
                new ObjectParameter("P_IdProceso", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ValorDeclaradoAutorizacion_Insertar_pa", p_IdValorDeclaradoParameter, p_IdEmpresaParameter, p_IdProcesoParameter);
        }
    
        public virtual ObjectResult<string> SP_S_NotificarAutorizacion(Nullable<int> idValorDeclarado, Nullable<int> idProceso, string dominio)
        {
            var idValorDeclaradoParameter = idValorDeclarado.HasValue ?
                new ObjectParameter("IdValorDeclarado", idValorDeclarado) :
                new ObjectParameter("IdValorDeclarado", typeof(int));
    
            var idProcesoParameter = idProceso.HasValue ?
                new ObjectParameter("IdProceso", idProceso) :
                new ObjectParameter("IdProceso", typeof(int));
    
            var dominioParameter = dominio != null ?
                new ObjectParameter("Dominio", dominio) :
                new ObjectParameter("Dominio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SP_S_NotificarAutorizacion", idValorDeclaradoParameter, idProcesoParameter, dominioParameter);
        }
    
        public virtual ObjectResult<SP_S_Area_Result> SP_S_Area(Nullable<short> idEstado)
        {
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_Area_Result>("SP_S_Area", idEstadoParameter);
        }
    
        public virtual ObjectResult<SP_S_Persona_Result> SP_S_Persona(Nullable<short> idEstado)
        {
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_Persona_Result>("SP_S_Persona", idEstadoParameter);
        }
    
        public virtual int SP_I_Persona(ObjectParameter idPersona, string nombres, string apellidoPaterno, string apellidoMaterno, string apellidos, Nullable<short> idTipoIdentidad, string nroIdentidad, Nullable<short> idEstado)
        {
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var idTipoIdentidadParameter = idTipoIdentidad.HasValue ?
                new ObjectParameter("IdTipoIdentidad", idTipoIdentidad) :
                new ObjectParameter("IdTipoIdentidad", typeof(short));
    
            var nroIdentidadParameter = nroIdentidad != null ?
                new ObjectParameter("NroIdentidad", nroIdentidad) :
                new ObjectParameter("NroIdentidad", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_I_Persona", idPersona, nombresParameter, apellidoPaternoParameter, apellidoMaternoParameter, apellidosParameter, idTipoIdentidadParameter, nroIdentidadParameter, idEstadoParameter);
        }
    
        public virtual ObjectResult<SP_S_trabajador_Result> SP_S_trabajador(Nullable<short> idEstado)
        {
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_trabajador_Result>("SP_S_trabajador", idEstadoParameter);
        }
    
        public virtual int SP_I_Trabajador(ObjectParameter idTrabajador, Nullable<int> idPersona, Nullable<short> idArea, Nullable<short> idEmpresa, Nullable<short> idUnidadNegocio, Nullable<short> idCentroServicio, Nullable<short> esPlanillado, Nullable<short> idCargo, Nullable<short> idClasificacionCargo, string email, string codigoSAP, Nullable<short> idEstado, string fechaIngreso)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var idAreaParameter = idArea.HasValue ?
                new ObjectParameter("IdArea", idArea) :
                new ObjectParameter("IdArea", typeof(short));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(short));
    
            var idUnidadNegocioParameter = idUnidadNegocio.HasValue ?
                new ObjectParameter("IdUnidadNegocio", idUnidadNegocio) :
                new ObjectParameter("IdUnidadNegocio", typeof(short));
    
            var idCentroServicioParameter = idCentroServicio.HasValue ?
                new ObjectParameter("IdCentroServicio", idCentroServicio) :
                new ObjectParameter("IdCentroServicio", typeof(short));
    
            var esPlanilladoParameter = esPlanillado.HasValue ?
                new ObjectParameter("EsPlanillado", esPlanillado) :
                new ObjectParameter("EsPlanillado", typeof(short));
    
            var idCargoParameter = idCargo.HasValue ?
                new ObjectParameter("IdCargo", idCargo) :
                new ObjectParameter("IdCargo", typeof(short));
    
            var idClasificacionCargoParameter = idClasificacionCargo.HasValue ?
                new ObjectParameter("IdClasificacionCargo", idClasificacionCargo) :
                new ObjectParameter("IdClasificacionCargo", typeof(short));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var codigoSAPParameter = codigoSAP != null ?
                new ObjectParameter("CodigoSAP", codigoSAP) :
                new ObjectParameter("CodigoSAP", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            var fechaIngresoParameter = fechaIngreso != null ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_I_Trabajador", idTrabajador, idPersonaParameter, idAreaParameter, idEmpresaParameter, idUnidadNegocioParameter, idCentroServicioParameter, esPlanilladoParameter, idCargoParameter, idClasificacionCargoParameter, emailParameter, codigoSAPParameter, idEstadoParameter, fechaIngresoParameter);
        }
    
        public virtual int SP_U_PERSONA(ObjectParameter idPersona, string nombres, string apellidoPaterno, string apellidoMaterno, string apellidos, Nullable<short> idTipoIdentidad, string nroIdentidad, Nullable<short> idEstado)
        {
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var idTipoIdentidadParameter = idTipoIdentidad.HasValue ?
                new ObjectParameter("IdTipoIdentidad", idTipoIdentidad) :
                new ObjectParameter("IdTipoIdentidad", typeof(short));
    
            var nroIdentidadParameter = nroIdentidad != null ?
                new ObjectParameter("NroIdentidad", nroIdentidad) :
                new ObjectParameter("NroIdentidad", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_U_PERSONA", idPersona, nombresParameter, apellidoPaternoParameter, apellidoMaternoParameter, apellidosParameter, idTipoIdentidadParameter, nroIdentidadParameter, idEstadoParameter);
        }
    
        public virtual int SP_U_TRABAJADOR(ObjectParameter idTrabajador, Nullable<int> idPersona, Nullable<short> idArea, Nullable<short> idEmpresa, Nullable<short> idUnidadNegocio, Nullable<short> idCentroServicio, Nullable<short> esPlanillado, Nullable<short> idCargo, Nullable<short> idClasificacionCargo, string email, string codigoSAP, Nullable<short> idEstado, string fechaIngreso)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("IdPersona", idPersona) :
                new ObjectParameter("IdPersona", typeof(int));
    
            var idAreaParameter = idArea.HasValue ?
                new ObjectParameter("IdArea", idArea) :
                new ObjectParameter("IdArea", typeof(short));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(short));
    
            var idUnidadNegocioParameter = idUnidadNegocio.HasValue ?
                new ObjectParameter("IdUnidadNegocio", idUnidadNegocio) :
                new ObjectParameter("IdUnidadNegocio", typeof(short));
    
            var idCentroServicioParameter = idCentroServicio.HasValue ?
                new ObjectParameter("IdCentroServicio", idCentroServicio) :
                new ObjectParameter("IdCentroServicio", typeof(short));
    
            var esPlanilladoParameter = esPlanillado.HasValue ?
                new ObjectParameter("EsPlanillado", esPlanillado) :
                new ObjectParameter("EsPlanillado", typeof(short));
    
            var idCargoParameter = idCargo.HasValue ?
                new ObjectParameter("IdCargo", idCargo) :
                new ObjectParameter("IdCargo", typeof(short));
    
            var idClasificacionCargoParameter = idClasificacionCargo.HasValue ?
                new ObjectParameter("IdClasificacionCargo", idClasificacionCargo) :
                new ObjectParameter("IdClasificacionCargo", typeof(short));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var codigoSAPParameter = codigoSAP != null ?
                new ObjectParameter("CodigoSAP", codigoSAP) :
                new ObjectParameter("CodigoSAP", typeof(string));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            var fechaIngresoParameter = fechaIngreso != null ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_U_TRABAJADOR", idTrabajador, idPersonaParameter, idAreaParameter, idEmpresaParameter, idUnidadNegocioParameter, idCentroServicioParameter, esPlanilladoParameter, idCargoParameter, idClasificacionCargoParameter, emailParameter, codigoSAPParameter, idEstadoParameter, fechaIngresoParameter);
        }
    
        public virtual int SP_U_ValorDeclaradoAutorizacion(Nullable<System.Guid> idClaveUnica, Nullable<short> idEstado)
        {
            var idClaveUnicaParameter = idClaveUnica.HasValue ?
                new ObjectParameter("IdClaveUnica", idClaveUnica) :
                new ObjectParameter("IdClaveUnica", typeof(System.Guid));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_U_ValorDeclaradoAutorizacion", idClaveUnicaParameter, idEstadoParameter);
        }
    
        public virtual ObjectResult<SP_S_PendienteAutorizacion_Result> SP_S_PendienteAutorizacion(Nullable<int> idValorDeclarado)
        {
            var idValorDeclaradoParameter = idValorDeclarado.HasValue ?
                new ObjectParameter("IdValorDeclarado", idValorDeclarado) :
                new ObjectParameter("IdValorDeclarado", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_PendienteAutorizacion_Result>("SP_S_PendienteAutorizacion", idValorDeclaradoParameter);
        }
    
        public virtual int SP_U_ValorDeclarado_Estado(Nullable<int> idValorDeclarado, Nullable<short> idEstado)
        {
            var idValorDeclaradoParameter = idValorDeclarado.HasValue ?
                new ObjectParameter("IdValorDeclarado", idValorDeclarado) :
                new ObjectParameter("IdValorDeclarado", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_U_ValorDeclarado_Estado", idValorDeclaradoParameter, idEstadoParameter);
        }
    
        public virtual ObjectResult<SP_S_ValorDeclaradoDetalleComplemento_Result> SP_S_ValorDeclaradoDetalleComplemento(Nullable<int> idValorDeclaradoDetalle, Nullable<short> idEstado)
        {
            var idValorDeclaradoDetalleParameter = idValorDeclaradoDetalle.HasValue ?
                new ObjectParameter("IdValorDeclaradoDetalle", idValorDeclaradoDetalle) :
                new ObjectParameter("IdValorDeclaradoDetalle", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_ValorDeclaradoDetalleComplemento_Result>("SP_S_ValorDeclaradoDetalleComplemento", idValorDeclaradoDetalleParameter, idEstadoParameter);
        }
    
        public virtual int sp_i_personacomplemento(Nullable<int> idPersona, Nullable<int> sexo, Nullable<int> idGradoInstruccion, Nullable<System.DateTime> fechaNacimiento)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(int));
    
            var idGradoInstruccionParameter = idGradoInstruccion.HasValue ?
                new ObjectParameter("idGradoInstruccion", idGradoInstruccion) :
                new ObjectParameter("idGradoInstruccion", typeof(int));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_i_personacomplemento", idPersonaParameter, sexoParameter, idGradoInstruccionParameter, fechaNacimientoParameter);
        }
    
        public virtual int sp_u_personacomplemento(Nullable<int> idPersona, Nullable<int> sexo, Nullable<int> idGradoInstruccion, Nullable<System.DateTime> fechaNacimiento)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(int));
    
            var idGradoInstruccionParameter = idGradoInstruccion.HasValue ?
                new ObjectParameter("idGradoInstruccion", idGradoInstruccion) :
                new ObjectParameter("idGradoInstruccion", typeof(int));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_u_personacomplemento", idPersonaParameter, sexoParameter, idGradoInstruccionParameter, fechaNacimientoParameter);
        }
    
        public virtual ObjectResult<SP_S_ValorDeclaradoDetalleComplementoTrabajador_Result> SP_S_ValorDeclaradoDetalleComplementoTrabajador(Nullable<int> idValorDeclaradoDetalle, Nullable<short> idEstado)
        {
            var idValorDeclaradoDetalleParameter = idValorDeclaradoDetalle.HasValue ?
                new ObjectParameter("IdValorDeclaradoDetalle", idValorDeclaradoDetalle) :
                new ObjectParameter("IdValorDeclaradoDetalle", typeof(int));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_ValorDeclaradoDetalleComplementoTrabajador_Result>("SP_S_ValorDeclaradoDetalleComplementoTrabajador", idValorDeclaradoDetalleParameter, idEstadoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_s_buscar_personacomplemento_codigo(Nullable<int> idPersona)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_s_buscar_personacomplemento_codigo", idPersonaParameter);
        }
    
        public virtual int SP_I_Vehiculo(ObjectParameter idVehiculo, Nullable<short> idEmpresa, Nullable<short> idUnidadNegocio, Nullable<short> idCentroCosto, Nullable<short> idTipoVehiculo, Nullable<short> idMarca, Nullable<int> idModelo, string placaAnterior, string placa, string serieCarroceria, string serieMotor, string clase, Nullable<short> anoFabricado, Nullable<short> idColor, Nullable<short> nroAsientos, Nullable<short> timonCambiado, Nullable<short> idMoneda, Nullable<decimal> valorComercial, Nullable<short> idEstado, Nullable<System.DateTime> dtFechaInicio, Nullable<System.DateTime> dtFechaTermino)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(short));
    
            var idUnidadNegocioParameter = idUnidadNegocio.HasValue ?
                new ObjectParameter("IdUnidadNegocio", idUnidadNegocio) :
                new ObjectParameter("IdUnidadNegocio", typeof(short));
    
            var idCentroCostoParameter = idCentroCosto.HasValue ?
                new ObjectParameter("IdCentroCosto", idCentroCosto) :
                new ObjectParameter("IdCentroCosto", typeof(short));
    
            var idTipoVehiculoParameter = idTipoVehiculo.HasValue ?
                new ObjectParameter("IdTipoVehiculo", idTipoVehiculo) :
                new ObjectParameter("IdTipoVehiculo", typeof(short));
    
            var idMarcaParameter = idMarca.HasValue ?
                new ObjectParameter("IdMarca", idMarca) :
                new ObjectParameter("IdMarca", typeof(short));
    
            var idModeloParameter = idModelo.HasValue ?
                new ObjectParameter("IdModelo", idModelo) :
                new ObjectParameter("IdModelo", typeof(int));
    
            var placaAnteriorParameter = placaAnterior != null ?
                new ObjectParameter("PlacaAnterior", placaAnterior) :
                new ObjectParameter("PlacaAnterior", typeof(string));
    
            var placaParameter = placa != null ?
                new ObjectParameter("Placa", placa) :
                new ObjectParameter("Placa", typeof(string));
    
            var serieCarroceriaParameter = serieCarroceria != null ?
                new ObjectParameter("SerieCarroceria", serieCarroceria) :
                new ObjectParameter("SerieCarroceria", typeof(string));
    
            var serieMotorParameter = serieMotor != null ?
                new ObjectParameter("SerieMotor", serieMotor) :
                new ObjectParameter("SerieMotor", typeof(string));
    
            var claseParameter = clase != null ?
                new ObjectParameter("Clase", clase) :
                new ObjectParameter("Clase", typeof(string));
    
            var anoFabricadoParameter = anoFabricado.HasValue ?
                new ObjectParameter("AnoFabricado", anoFabricado) :
                new ObjectParameter("AnoFabricado", typeof(short));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("IdColor", idColor) :
                new ObjectParameter("IdColor", typeof(short));
    
            var nroAsientosParameter = nroAsientos.HasValue ?
                new ObjectParameter("NroAsientos", nroAsientos) :
                new ObjectParameter("NroAsientos", typeof(short));
    
            var timonCambiadoParameter = timonCambiado.HasValue ?
                new ObjectParameter("TimonCambiado", timonCambiado) :
                new ObjectParameter("TimonCambiado", typeof(short));
    
            var idMonedaParameter = idMoneda.HasValue ?
                new ObjectParameter("IdMoneda", idMoneda) :
                new ObjectParameter("IdMoneda", typeof(short));
    
            var valorComercialParameter = valorComercial.HasValue ?
                new ObjectParameter("ValorComercial", valorComercial) :
                new ObjectParameter("ValorComercial", typeof(decimal));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            var dtFechaInicioParameter = dtFechaInicio.HasValue ?
                new ObjectParameter("dtFechaInicio", dtFechaInicio) :
                new ObjectParameter("dtFechaInicio", typeof(System.DateTime));
    
            var dtFechaTerminoParameter = dtFechaTermino.HasValue ?
                new ObjectParameter("dtFechaTermino", dtFechaTermino) :
                new ObjectParameter("dtFechaTermino", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_I_Vehiculo", idVehiculo, idEmpresaParameter, idUnidadNegocioParameter, idCentroCostoParameter, idTipoVehiculoParameter, idMarcaParameter, idModeloParameter, placaAnteriorParameter, placaParameter, serieCarroceriaParameter, serieMotorParameter, claseParameter, anoFabricadoParameter, idColorParameter, nroAsientosParameter, timonCambiadoParameter, idMonedaParameter, valorComercialParameter, idEstadoParameter, dtFechaInicioParameter, dtFechaTerminoParameter);
        }
    
        public virtual int SP_U_Vehiculo(Nullable<int> idVehiculo, Nullable<short> idEmpresa, Nullable<short> idUnidadNegocio, Nullable<short> idCentroCosto, Nullable<short> idTipoVehiculo, Nullable<short> idMarca, Nullable<int> idModelo, string placaAnterior, string placa, string serieCarroceria, string serieMotor, string clase, Nullable<short> anoFabricado, Nullable<short> idColor, Nullable<short> nroAsientos, Nullable<short> timonCambiado, Nullable<short> idMoneda, Nullable<decimal> valorComercial, Nullable<short> idEstado, Nullable<System.DateTime> dtFechaInicio, Nullable<System.DateTime> dtFechaTermino)
        {
            var idVehiculoParameter = idVehiculo.HasValue ?
                new ObjectParameter("IdVehiculo", idVehiculo) :
                new ObjectParameter("IdVehiculo", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(short));
    
            var idUnidadNegocioParameter = idUnidadNegocio.HasValue ?
                new ObjectParameter("IdUnidadNegocio", idUnidadNegocio) :
                new ObjectParameter("IdUnidadNegocio", typeof(short));
    
            var idCentroCostoParameter = idCentroCosto.HasValue ?
                new ObjectParameter("IdCentroCosto", idCentroCosto) :
                new ObjectParameter("IdCentroCosto", typeof(short));
    
            var idTipoVehiculoParameter = idTipoVehiculo.HasValue ?
                new ObjectParameter("IdTipoVehiculo", idTipoVehiculo) :
                new ObjectParameter("IdTipoVehiculo", typeof(short));
    
            var idMarcaParameter = idMarca.HasValue ?
                new ObjectParameter("IdMarca", idMarca) :
                new ObjectParameter("IdMarca", typeof(short));
    
            var idModeloParameter = idModelo.HasValue ?
                new ObjectParameter("IdModelo", idModelo) :
                new ObjectParameter("IdModelo", typeof(int));
    
            var placaAnteriorParameter = placaAnterior != null ?
                new ObjectParameter("PlacaAnterior", placaAnterior) :
                new ObjectParameter("PlacaAnterior", typeof(string));
    
            var placaParameter = placa != null ?
                new ObjectParameter("Placa", placa) :
                new ObjectParameter("Placa", typeof(string));
    
            var serieCarroceriaParameter = serieCarroceria != null ?
                new ObjectParameter("SerieCarroceria", serieCarroceria) :
                new ObjectParameter("SerieCarroceria", typeof(string));
    
            var serieMotorParameter = serieMotor != null ?
                new ObjectParameter("SerieMotor", serieMotor) :
                new ObjectParameter("SerieMotor", typeof(string));
    
            var claseParameter = clase != null ?
                new ObjectParameter("Clase", clase) :
                new ObjectParameter("Clase", typeof(string));
    
            var anoFabricadoParameter = anoFabricado.HasValue ?
                new ObjectParameter("AnoFabricado", anoFabricado) :
                new ObjectParameter("AnoFabricado", typeof(short));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("IdColor", idColor) :
                new ObjectParameter("IdColor", typeof(short));
    
            var nroAsientosParameter = nroAsientos.HasValue ?
                new ObjectParameter("NroAsientos", nroAsientos) :
                new ObjectParameter("NroAsientos", typeof(short));
    
            var timonCambiadoParameter = timonCambiado.HasValue ?
                new ObjectParameter("TimonCambiado", timonCambiado) :
                new ObjectParameter("TimonCambiado", typeof(short));
    
            var idMonedaParameter = idMoneda.HasValue ?
                new ObjectParameter("IdMoneda", idMoneda) :
                new ObjectParameter("IdMoneda", typeof(short));
    
            var valorComercialParameter = valorComercial.HasValue ?
                new ObjectParameter("ValorComercial", valorComercial) :
                new ObjectParameter("ValorComercial", typeof(decimal));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            var dtFechaInicioParameter = dtFechaInicio.HasValue ?
                new ObjectParameter("dtFechaInicio", dtFechaInicio) :
                new ObjectParameter("dtFechaInicio", typeof(System.DateTime));
    
            var dtFechaTerminoParameter = dtFechaTermino.HasValue ?
                new ObjectParameter("dtFechaTermino", dtFechaTermino) :
                new ObjectParameter("dtFechaTermino", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_U_Vehiculo", idVehiculoParameter, idEmpresaParameter, idUnidadNegocioParameter, idCentroCostoParameter, idTipoVehiculoParameter, idMarcaParameter, idModeloParameter, placaAnteriorParameter, placaParameter, serieCarroceriaParameter, serieMotorParameter, claseParameter, anoFabricadoParameter, idColorParameter, nroAsientosParameter, timonCambiadoParameter, idMonedaParameter, valorComercialParameter, idEstadoParameter, dtFechaInicioParameter, dtFechaTerminoParameter);
        }
    
        public virtual ObjectResult<SP_S_BUSCAR_PERSONA_POR_ESTADO_Y_DNI_Result> SP_S_BUSCAR_PERSONA_POR_ESTADO_Y_DNI(Nullable<short> idEstado, string dNI)
        {
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            var dNIParameter = dNI != null ?
                new ObjectParameter("DNI", dNI) :
                new ObjectParameter("DNI", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_BUSCAR_PERSONA_POR_ESTADO_Y_DNI_Result>("SP_S_BUSCAR_PERSONA_POR_ESTADO_Y_DNI", idEstadoParameter, dNIParameter);
        }
    
        public virtual ObjectResult<SP_S_trabajador_POR_ID_PERSONA_Result> SP_S_trabajador_POR_ID_PERSONA(Nullable<int> iDPERSONA, Nullable<int> iDESTADO)
        {
            var iDPERSONAParameter = iDPERSONA.HasValue ?
                new ObjectParameter("IDPERSONA", iDPERSONA) :
                new ObjectParameter("IDPERSONA", typeof(int));
    
            var iDESTADOParameter = iDESTADO.HasValue ?
                new ObjectParameter("IDESTADO", iDESTADO) :
                new ObjectParameter("IDESTADO", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_trabajador_POR_ID_PERSONA_Result>("SP_S_trabajador_POR_ID_PERSONA", iDPERSONAParameter, iDESTADOParameter);
        }
    
        public virtual int sp_i_personacomplemento1(Nullable<int> idPersona, Nullable<int> sexo, Nullable<int> idGradoInstruccion, Nullable<System.DateTime> fechaNacimiento)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(int));
    
            var idGradoInstruccionParameter = idGradoInstruccion.HasValue ?
                new ObjectParameter("idGradoInstruccion", idGradoInstruccion) :
                new ObjectParameter("idGradoInstruccion", typeof(int));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_i_personacomplemento1", idPersonaParameter, sexoParameter, idGradoInstruccionParameter, fechaNacimientoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_s_buscar_personacomplemento_codigo1(Nullable<int> idPersona)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_s_buscar_personacomplemento_codigo1", idPersonaParameter);
        }
    
        public virtual int sp_u_personacomplemento1(Nullable<int> idPersona, Nullable<int> sexo, Nullable<int> idGradoInstruccion, Nullable<System.DateTime> fechaNacimiento)
        {
            var idPersonaParameter = idPersona.HasValue ?
                new ObjectParameter("idPersona", idPersona) :
                new ObjectParameter("idPersona", typeof(int));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(int));
    
            var idGradoInstruccionParameter = idGradoInstruccion.HasValue ?
                new ObjectParameter("idGradoInstruccion", idGradoInstruccion) :
                new ObjectParameter("idGradoInstruccion", typeof(int));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_u_personacomplemento1", idPersonaParameter, sexoParameter, idGradoInstruccionParameter, fechaNacimientoParameter);
        }
    
        public virtual int SP_I_ValorDeclaradoDetalleComplemento_trabajador_excel_writer(ObjectParameter idValorDeclaradoDetalleComplemento, Nullable<int> idValorDeclaradoDetalle, Nullable<short> idTipoBien, Nullable<int> idElementoElectrico, Nullable<int> idTrabajador, Nullable<int> idVehiculo, Nullable<int> idInstalacion, Nullable<short> idCentroCosto, Nullable<short> idArea, Nullable<short> idCargo, Nullable<short> idUUNN, Nullable<short> idTipoPlanilla, Nullable<short> idNivelRiesgo, Nullable<decimal> valorDeclarado, Nullable<decimal> importeMensual, Nullable<decimal> importeGratificacion, Nullable<short> idEstado, string nombreOrigen, string nombreAsignado, string ruta, string dNI, string nombres, string apellidoPaterno, string apellidoMaterno, Nullable<System.DateTime> fechaNacimiento, Nullable<System.DateTime> fechaIngreso)
        {
            var idValorDeclaradoDetalleParameter = idValorDeclaradoDetalle.HasValue ?
                new ObjectParameter("IdValorDeclaradoDetalle", idValorDeclaradoDetalle) :
                new ObjectParameter("IdValorDeclaradoDetalle", typeof(int));
    
            var idTipoBienParameter = idTipoBien.HasValue ?
                new ObjectParameter("IdTipoBien", idTipoBien) :
                new ObjectParameter("IdTipoBien", typeof(short));
    
            var idElementoElectricoParameter = idElementoElectrico.HasValue ?
                new ObjectParameter("IdElementoElectrico", idElementoElectrico) :
                new ObjectParameter("IdElementoElectrico", typeof(int));
    
            var idTrabajadorParameter = idTrabajador.HasValue ?
                new ObjectParameter("IdTrabajador", idTrabajador) :
                new ObjectParameter("IdTrabajador", typeof(int));
    
            var idVehiculoParameter = idVehiculo.HasValue ?
                new ObjectParameter("IdVehiculo", idVehiculo) :
                new ObjectParameter("IdVehiculo", typeof(int));
    
            var idInstalacionParameter = idInstalacion.HasValue ?
                new ObjectParameter("IdInstalacion", idInstalacion) :
                new ObjectParameter("IdInstalacion", typeof(int));
    
            var idCentroCostoParameter = idCentroCosto.HasValue ?
                new ObjectParameter("IdCentroCosto", idCentroCosto) :
                new ObjectParameter("IdCentroCosto", typeof(short));
    
            var idAreaParameter = idArea.HasValue ?
                new ObjectParameter("IdArea", idArea) :
                new ObjectParameter("IdArea", typeof(short));
    
            var idCargoParameter = idCargo.HasValue ?
                new ObjectParameter("IdCargo", idCargo) :
                new ObjectParameter("IdCargo", typeof(short));
    
            var idUUNNParameter = idUUNN.HasValue ?
                new ObjectParameter("IdUUNN", idUUNN) :
                new ObjectParameter("IdUUNN", typeof(short));
    
            var idTipoPlanillaParameter = idTipoPlanilla.HasValue ?
                new ObjectParameter("IdTipoPlanilla", idTipoPlanilla) :
                new ObjectParameter("IdTipoPlanilla", typeof(short));
    
            var idNivelRiesgoParameter = idNivelRiesgo.HasValue ?
                new ObjectParameter("IdNivelRiesgo", idNivelRiesgo) :
                new ObjectParameter("IdNivelRiesgo", typeof(short));
    
            var valorDeclaradoParameter = valorDeclarado.HasValue ?
                new ObjectParameter("ValorDeclarado", valorDeclarado) :
                new ObjectParameter("ValorDeclarado", typeof(decimal));
    
            var importeMensualParameter = importeMensual.HasValue ?
                new ObjectParameter("ImporteMensual", importeMensual) :
                new ObjectParameter("ImporteMensual", typeof(decimal));
    
            var importeGratificacionParameter = importeGratificacion.HasValue ?
                new ObjectParameter("ImporteGratificacion", importeGratificacion) :
                new ObjectParameter("ImporteGratificacion", typeof(decimal));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            var nombreOrigenParameter = nombreOrigen != null ?
                new ObjectParameter("NombreOrigen", nombreOrigen) :
                new ObjectParameter("NombreOrigen", typeof(string));
    
            var nombreAsignadoParameter = nombreAsignado != null ?
                new ObjectParameter("NombreAsignado", nombreAsignado) :
                new ObjectParameter("NombreAsignado", typeof(string));
    
            var rutaParameter = ruta != null ?
                new ObjectParameter("Ruta", ruta) :
                new ObjectParameter("Ruta", typeof(string));
    
            var dNIParameter = dNI != null ?
                new ObjectParameter("DNI", dNI) :
                new ObjectParameter("DNI", typeof(string));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var apellidoPaternoParameter = apellidoPaterno != null ?
                new ObjectParameter("ApellidoPaterno", apellidoPaterno) :
                new ObjectParameter("ApellidoPaterno", typeof(string));
    
            var apellidoMaternoParameter = apellidoMaterno != null ?
                new ObjectParameter("ApellidoMaterno", apellidoMaterno) :
                new ObjectParameter("ApellidoMaterno", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var fechaIngresoParameter = fechaIngreso.HasValue ?
                new ObjectParameter("FechaIngreso", fechaIngreso) :
                new ObjectParameter("FechaIngreso", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_I_ValorDeclaradoDetalleComplemento_trabajador_excel_writer", idValorDeclaradoDetalleComplemento, idValorDeclaradoDetalleParameter, idTipoBienParameter, idElementoElectricoParameter, idTrabajadorParameter, idVehiculoParameter, idInstalacionParameter, idCentroCostoParameter, idAreaParameter, idCargoParameter, idUUNNParameter, idTipoPlanillaParameter, idNivelRiesgoParameter, valorDeclaradoParameter, importeMensualParameter, importeGratificacionParameter, idEstadoParameter, nombreOrigenParameter, nombreAsignadoParameter, rutaParameter, dNIParameter, nombresParameter, apellidoPaternoParameter, apellidoMaternoParameter, fechaNacimientoParameter, fechaIngresoParameter);
        }
    
        public virtual int SP_I_ValorDeclaradoDetalleComplemento_vehiculo_excel_writer(ObjectParameter idValorDeclaradoDetalleComplemento, Nullable<int> idValorDeclaradoDetalle, Nullable<short> idTipoBien, Nullable<int> idVehiculo, Nullable<short> idCentroCosto, Nullable<short> idArea, Nullable<short> idCargo, Nullable<short> idUUNN, Nullable<short> idTipoPlanilla, Nullable<short> idNivelRiesgo, Nullable<decimal> valorDeclarado, Nullable<decimal> importeMensual, Nullable<decimal> importeGratificacion, Nullable<short> idEstado, string nombreOrigen, string nombreAsignado, string ruta, Nullable<short> idEmpresa, Nullable<short> idUnidadNegocio, Nullable<short> idTipoVehiculo, Nullable<short> idMarca, Nullable<int> idModelo, string placaAnterior, string placa, string serieCarroceria, string serieMotor, string clase, Nullable<short> anoFabricado, Nullable<short> idColor, Nullable<short> nroAsientos, Nullable<short> timonCambiado, Nullable<short> idMoneda, Nullable<decimal> valorComercial, Nullable<System.DateTime> dtFechaInicio, Nullable<System.DateTime> dtFechaTermino)
        {
            var idValorDeclaradoDetalleParameter = idValorDeclaradoDetalle.HasValue ?
                new ObjectParameter("IdValorDeclaradoDetalle", idValorDeclaradoDetalle) :
                new ObjectParameter("IdValorDeclaradoDetalle", typeof(int));
    
            var idTipoBienParameter = idTipoBien.HasValue ?
                new ObjectParameter("IdTipoBien", idTipoBien) :
                new ObjectParameter("IdTipoBien", typeof(short));
    
            var idVehiculoParameter = idVehiculo.HasValue ?
                new ObjectParameter("IdVehiculo", idVehiculo) :
                new ObjectParameter("IdVehiculo", typeof(int));
    
            var idCentroCostoParameter = idCentroCosto.HasValue ?
                new ObjectParameter("IdCentroCosto", idCentroCosto) :
                new ObjectParameter("IdCentroCosto", typeof(short));
    
            var idAreaParameter = idArea.HasValue ?
                new ObjectParameter("IdArea", idArea) :
                new ObjectParameter("IdArea", typeof(short));
    
            var idCargoParameter = idCargo.HasValue ?
                new ObjectParameter("IdCargo", idCargo) :
                new ObjectParameter("IdCargo", typeof(short));
    
            var idUUNNParameter = idUUNN.HasValue ?
                new ObjectParameter("IdUUNN", idUUNN) :
                new ObjectParameter("IdUUNN", typeof(short));
    
            var idTipoPlanillaParameter = idTipoPlanilla.HasValue ?
                new ObjectParameter("IdTipoPlanilla", idTipoPlanilla) :
                new ObjectParameter("IdTipoPlanilla", typeof(short));
    
            var idNivelRiesgoParameter = idNivelRiesgo.HasValue ?
                new ObjectParameter("IdNivelRiesgo", idNivelRiesgo) :
                new ObjectParameter("IdNivelRiesgo", typeof(short));
    
            var valorDeclaradoParameter = valorDeclarado.HasValue ?
                new ObjectParameter("ValorDeclarado", valorDeclarado) :
                new ObjectParameter("ValorDeclarado", typeof(decimal));
    
            var importeMensualParameter = importeMensual.HasValue ?
                new ObjectParameter("ImporteMensual", importeMensual) :
                new ObjectParameter("ImporteMensual", typeof(decimal));
    
            var importeGratificacionParameter = importeGratificacion.HasValue ?
                new ObjectParameter("ImporteGratificacion", importeGratificacion) :
                new ObjectParameter("ImporteGratificacion", typeof(decimal));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            var nombreOrigenParameter = nombreOrigen != null ?
                new ObjectParameter("NombreOrigen", nombreOrigen) :
                new ObjectParameter("NombreOrigen", typeof(string));
    
            var nombreAsignadoParameter = nombreAsignado != null ?
                new ObjectParameter("NombreAsignado", nombreAsignado) :
                new ObjectParameter("NombreAsignado", typeof(string));
    
            var rutaParameter = ruta != null ?
                new ObjectParameter("Ruta", ruta) :
                new ObjectParameter("Ruta", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(short));
    
            var idUnidadNegocioParameter = idUnidadNegocio.HasValue ?
                new ObjectParameter("IdUnidadNegocio", idUnidadNegocio) :
                new ObjectParameter("IdUnidadNegocio", typeof(short));
    
            var idTipoVehiculoParameter = idTipoVehiculo.HasValue ?
                new ObjectParameter("IdTipoVehiculo", idTipoVehiculo) :
                new ObjectParameter("IdTipoVehiculo", typeof(short));
    
            var idMarcaParameter = idMarca.HasValue ?
                new ObjectParameter("IdMarca", idMarca) :
                new ObjectParameter("IdMarca", typeof(short));
    
            var idModeloParameter = idModelo.HasValue ?
                new ObjectParameter("IdModelo", idModelo) :
                new ObjectParameter("IdModelo", typeof(int));
    
            var placaAnteriorParameter = placaAnterior != null ?
                new ObjectParameter("PlacaAnterior", placaAnterior) :
                new ObjectParameter("PlacaAnterior", typeof(string));
    
            var placaParameter = placa != null ?
                new ObjectParameter("Placa", placa) :
                new ObjectParameter("Placa", typeof(string));
    
            var serieCarroceriaParameter = serieCarroceria != null ?
                new ObjectParameter("SerieCarroceria", serieCarroceria) :
                new ObjectParameter("SerieCarroceria", typeof(string));
    
            var serieMotorParameter = serieMotor != null ?
                new ObjectParameter("SerieMotor", serieMotor) :
                new ObjectParameter("SerieMotor", typeof(string));
    
            var claseParameter = clase != null ?
                new ObjectParameter("Clase", clase) :
                new ObjectParameter("Clase", typeof(string));
    
            var anoFabricadoParameter = anoFabricado.HasValue ?
                new ObjectParameter("AnoFabricado", anoFabricado) :
                new ObjectParameter("AnoFabricado", typeof(short));
    
            var idColorParameter = idColor.HasValue ?
                new ObjectParameter("IdColor", idColor) :
                new ObjectParameter("IdColor", typeof(short));
    
            var nroAsientosParameter = nroAsientos.HasValue ?
                new ObjectParameter("NroAsientos", nroAsientos) :
                new ObjectParameter("NroAsientos", typeof(short));
    
            var timonCambiadoParameter = timonCambiado.HasValue ?
                new ObjectParameter("TimonCambiado", timonCambiado) :
                new ObjectParameter("TimonCambiado", typeof(short));
    
            var idMonedaParameter = idMoneda.HasValue ?
                new ObjectParameter("IdMoneda", idMoneda) :
                new ObjectParameter("IdMoneda", typeof(short));
    
            var valorComercialParameter = valorComercial.HasValue ?
                new ObjectParameter("ValorComercial", valorComercial) :
                new ObjectParameter("ValorComercial", typeof(decimal));
    
            var dtFechaInicioParameter = dtFechaInicio.HasValue ?
                new ObjectParameter("dtFechaInicio", dtFechaInicio) :
                new ObjectParameter("dtFechaInicio", typeof(System.DateTime));
    
            var dtFechaTerminoParameter = dtFechaTermino.HasValue ?
                new ObjectParameter("dtFechaTermino", dtFechaTermino) :
                new ObjectParameter("dtFechaTermino", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_I_ValorDeclaradoDetalleComplemento_vehiculo_excel_writer", idValorDeclaradoDetalleComplemento, idValorDeclaradoDetalleParameter, idTipoBienParameter, idVehiculoParameter, idCentroCostoParameter, idAreaParameter, idCargoParameter, idUUNNParameter, idTipoPlanillaParameter, idNivelRiesgoParameter, valorDeclaradoParameter, importeMensualParameter, importeGratificacionParameter, idEstadoParameter, nombreOrigenParameter, nombreAsignadoParameter, rutaParameter, idEmpresaParameter, idUnidadNegocioParameter, idTipoVehiculoParameter, idMarcaParameter, idModeloParameter, placaAnteriorParameter, placaParameter, serieCarroceriaParameter, serieMotorParameter, claseParameter, anoFabricadoParameter, idColorParameter, nroAsientosParameter, timonCambiadoParameter, idMonedaParameter, valorComercialParameter, dtFechaInicioParameter, dtFechaTerminoParameter);
        }
    
        public virtual ObjectResult<SP_S_ValorDeclaradoPorId_Result> SP_S_ValorDeclaradoPorId(Nullable<short> idValorDeclarado)
        {
            var idValorDeclaradoParameter = idValorDeclarado.HasValue ?
                new ObjectParameter("IdValorDeclarado", idValorDeclarado) :
                new ObjectParameter("IdValorDeclarado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_ValorDeclaradoPorId_Result>("SP_S_ValorDeclaradoPorId", idValorDeclaradoParameter);
        }
    
        public virtual ObjectResult<SP_S_ValorDeclarado_page_server_Result> SP_S_ValorDeclarado_page_server(Nullable<short> idEmpresa, Nullable<System.DateTime> fechaIni, Nullable<System.DateTime> fechaFin, Nullable<short> idEstado, Nullable<int> iPagina, Nullable<int> iTamaño)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(short));
    
            var fechaIniParameter = fechaIni.HasValue ?
                new ObjectParameter("FechaIni", fechaIni) :
                new ObjectParameter("FechaIni", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            var iPaginaParameter = iPagina.HasValue ?
                new ObjectParameter("iPagina", iPagina) :
                new ObjectParameter("iPagina", typeof(int));
    
            var iTamañoParameter = iTamaño.HasValue ?
                new ObjectParameter("iTamaño", iTamaño) :
                new ObjectParameter("iTamaño", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_ValorDeclarado_page_server_Result>("SP_S_ValorDeclarado_page_server", idEmpresaParameter, fechaIniParameter, fechaFinParameter, idEstadoParameter, iPaginaParameter, iTamañoParameter);
        }
    
        public virtual ObjectResult<SP_S_CentroCosto_Result> SP_S_CentroCosto(Nullable<short> idEstado)
        {
            var idEstadoParameter = idEstado.HasValue ?
                new ObjectParameter("IdEstado", idEstado) :
                new ObjectParameter("IdEstado", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_CentroCosto_Result>("SP_S_CentroCosto", idEstadoParameter);
        }
    
        public virtual ObjectResult<SP_S_validar_importe_ajustado_y_cantidad_ajustada_Result> SP_S_validar_importe_ajustado_y_cantidad_ajustada(Nullable<int> idValorDeclaradoDetalleDisgregado, Nullable<decimal> cantidadAjustada, Nullable<decimal> importeAjustado)
        {
            var idValorDeclaradoDetalleDisgregadoParameter = idValorDeclaradoDetalleDisgregado.HasValue ?
                new ObjectParameter("IdValorDeclaradoDetalleDisgregado", idValorDeclaradoDetalleDisgregado) :
                new ObjectParameter("IdValorDeclaradoDetalleDisgregado", typeof(int));
    
            var cantidadAjustadaParameter = cantidadAjustada.HasValue ?
                new ObjectParameter("CantidadAjustada", cantidadAjustada) :
                new ObjectParameter("CantidadAjustada", typeof(decimal));
    
            var importeAjustadoParameter = importeAjustado.HasValue ?
                new ObjectParameter("ImporteAjustado", importeAjustado) :
                new ObjectParameter("ImporteAjustado", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_validar_importe_ajustado_y_cantidad_ajustada_Result>("SP_S_validar_importe_ajustado_y_cantidad_ajustada", idValorDeclaradoDetalleDisgregadoParameter, cantidadAjustadaParameter, importeAjustadoParameter);
        }
    
        public virtual ObjectResult<SP_S_ReporteVehiculo_Result> SP_S_ReporteVehiculo(Nullable<short> idTipoPoliza, Nullable<short> idEmpresa, Nullable<System.DateTime> fechaVigenciaInicio, Nullable<System.DateTime> fechaVigenciaFin)
        {
            var idTipoPolizaParameter = idTipoPoliza.HasValue ?
                new ObjectParameter("IdTipoPoliza", idTipoPoliza) :
                new ObjectParameter("IdTipoPoliza", typeof(short));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(short));
    
            var fechaVigenciaInicioParameter = fechaVigenciaInicio.HasValue ?
                new ObjectParameter("FechaVigenciaInicio", fechaVigenciaInicio) :
                new ObjectParameter("FechaVigenciaInicio", typeof(System.DateTime));
    
            var fechaVigenciaFinParameter = fechaVigenciaFin.HasValue ?
                new ObjectParameter("FechaVigenciaFin", fechaVigenciaFin) :
                new ObjectParameter("FechaVigenciaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_ReporteVehiculo_Result>("SP_S_ReporteVehiculo", idTipoPolizaParameter, idEmpresaParameter, fechaVigenciaInicioParameter, fechaVigenciaFinParameter);
        }
    
        public virtual ObjectResult<SP_S_ReporteVehiculoDetalle_Result> SP_S_ReporteVehiculoDetalle(Nullable<short> idEmpresa, Nullable<System.DateTime> fechaVigenciaInicio, Nullable<System.DateTime> fechaVigenciaFin)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(short));
    
            var fechaVigenciaInicioParameter = fechaVigenciaInicio.HasValue ?
                new ObjectParameter("FechaVigenciaInicio", fechaVigenciaInicio) :
                new ObjectParameter("FechaVigenciaInicio", typeof(System.DateTime));
    
            var fechaVigenciaFinParameter = fechaVigenciaFin.HasValue ?
                new ObjectParameter("FechaVigenciaFin", fechaVigenciaFin) :
                new ObjectParameter("FechaVigenciaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_ReporteVehiculoDetalle_Result>("SP_S_ReporteVehiculoDetalle", idEmpresaParameter, fechaVigenciaInicioParameter, fechaVigenciaFinParameter);
        }
    
        public virtual ObjectResult<SP_S_ReportePatrimonial_Result> SP_S_ReportePatrimonial(Nullable<short> idTipoPoliza, Nullable<short> idEmpresa, Nullable<System.DateTime> fechaVigenciaInicio, Nullable<System.DateTime> fechaVigenciaFin)
        {
            var idTipoPolizaParameter = idTipoPoliza.HasValue ?
                new ObjectParameter("IdTipoPoliza", idTipoPoliza) :
                new ObjectParameter("IdTipoPoliza", typeof(short));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(short));
    
            var fechaVigenciaInicioParameter = fechaVigenciaInicio.HasValue ?
                new ObjectParameter("FechaVigenciaInicio", fechaVigenciaInicio) :
                new ObjectParameter("FechaVigenciaInicio", typeof(System.DateTime));
    
            var fechaVigenciaFinParameter = fechaVigenciaFin.HasValue ?
                new ObjectParameter("FechaVigenciaFin", fechaVigenciaFin) :
                new ObjectParameter("FechaVigenciaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_S_ReportePatrimonial_Result>("SP_S_ReportePatrimonial", idTipoPolizaParameter, idEmpresaParameter, fechaVigenciaInicioParameter, fechaVigenciaFinParameter);
        }
    }
}
